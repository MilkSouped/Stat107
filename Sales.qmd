---
title: "Sales"
author: "Ethan Chan, Alex Back, Darren Kuboyama"
date: "12/11/2024"
format:
  html:
    toc: true
    toc-location: left
    embed-resources: true
    code-line-numbers: true
---

**Scientific Question: What differentiates top-rated products from bottom-rated products across various categories, and what keywords in customer reviews signal positive sentiments?**

We begin by adding the tidyverse library for later uses.

#Packages

```{r}
library(tidyverse)
library(ggplot2)
```

Next we read in the product information into a dataframe and then combine all the review csvs into one single dataframe to later data clean.

```{r}
product_info <- read.csv('product_info.csv')
review_files <- list.files(pattern = "reviews_.*\\.csv") #merge csvs
reviews <- do.call(rbind, lapply(review_files, read.csv)) #make it into a dataframe

```

Now we narrow it down to the metrics we want to look at, specifically the categories, reviews, ratings, and the love counts.

```{r}
product_data <- product_info %>%
  select(product_id, product_name, brand_id, secondary_category, tertiary_category, rating, reviews, loves_count) %>%
  filter(!(secondary_category == "" & tertiary_category == ""))
```

Now we sort them into the top 3 and worst 3 based on the secondary category.

```{r}
top_3 <- product_data %>%
  group_by(secondary_category) %>%
  arrange(desc(rating), desc(reviews), desc(loves_count)) %>% 
  slice_head(n = 3) %>%  
  ungroup()

worst_3 <- product_data %>%
  group_by(secondary_category) %>%
  arrange(rating, reviews, loves_count) %>%  
  slice_head(n = 3) %>%  
  ungroup()

combined <- bind_rows(
  top_3 %>% mutate(category = "Top 3"),
  worst_3 %>% mutate(category = "Worst 3")
)

```

Now we might look at some trends, lets look at the average rating, reviews, and loves of the top 3 and worst 3.

```{r}
# Combined summary for Top 3 and Worst 3
summary_overall <- combined %>%
  group_by(category) %>%
  summarize(
    avg_rating = mean(rating, na.rm = TRUE),
    avg_reviews = mean(reviews, na.rm = TRUE),
    avg_loves = mean(loves_count, na.rm = TRUE)
  )
summary_category <- combined %>%
  group_by(secondary_category, category) %>%
  summarize(
    avg_rating = mean(rating, na.rm = TRUE),
    avg_reviews = mean(reviews, na.rm = TRUE),
    avg_loves = mean(loves_count, na.rm = TRUE),
    .groups = "drop"
  )
```

We can now start comparing the rating, reviews and love counts for the top 3 and bottom 3 products of each category by looking at some graphs

#Graphs

```{r}
top_bottom_moisturizers <- combined %>%
  filter(secondary_category == "Moisturizers") %>%
  filter(category %in% c("Top 3", "Worst 3"))  # Grab Top 3 and Worst 3

#print(top_bottom_moisturizers) Testing that the correct products are printed

ggplot(top_bottom_moisturizers, aes(x = reorder(product_name, rating), y = rating, fill = category)) +
  geom_bar(stat = "identity", width = 0.5) +
  labs(
    title = "Top 3 and Bottom 3 Ratings for Moisturizers",
    x = "Product Name",
    y = "Rating"
  ) +
  coord_flip() +  # flip the axis for better visibility
  theme_minimal() +
  theme(
    axis.text.y = element_text(size = 6),  
    axis.text.x = element_text(size = 6)
  )
```
