---
title: "Sales"
author: "Ethan Chan, Alex Back, Darren Kuboyama"
date: "12/11/2024"
format:
  html:
    toc: true
    toc-location: left
    embed-resources: true
    code-line-numbers: true
---

**Scientific Question: What differentiates top-rated products from bottom-rated products across various categories, and what keywords in customer reviews signal positive sentiments?**

We begin by adding the tidyverse library for later uses.

```{r}
library(tidyverse)
```

Next we read in the product information into a dataframe and then combine all the review csvs into one single dataframe to later data clean.

```{r}
product_info <- read.csv('product_info.csv')
review_files <- list.files(pattern = "reviews_.*\\.csv") #merge csvs
reviews <- do.call(rbind, lapply(review_files, read.csv)) #make it into a dataframe

```

Now we narrow it down to the metrics we want to look at, specifically the categories, reviews, ratings, and the love counts.

```{r}
product_data <- product_info %>%
  select(product_id, product_name, brand_id, secondary_category, tertiary_category, rating, reviews, loves_count) %>%
  filter(!(secondary_category == "" & tertiary_category == ""))
```

Now we sort them into the top 3 and worst 3 based on the secondary category.

```{r}
top_3 <- product_data %>%
  group_by(secondary_category) %>%
  arrange(desc(rating), desc(reviews), desc(loves_count)) %>% 
  slice_head(n = 3) %>%  
  ungroup()

worst_3 <- product_data %>%
  group_by(secondary_category) %>%
  arrange(rating, reviews, loves_count) %>%  
  slice_head(n = 3) %>%  
  ungroup()

combined <- bind_rows(
  top_3 %>% mutate(category = "Top 3"),
  worst_3 %>% mutate(category = "Worst 3")
)

```

Now we might look at some trends, lets look at the average rating, reviews, and loves of the top 3 and worst 3.

```{r}
# Combined summary for Top 3 and Worst 3
summary_overall <- combined %>%
  group_by(category) %>%
  summarize(
    avg_rating = mean(rating, na.rm = TRUE),
    avg_reviews = mean(reviews, na.rm = TRUE),
    avg_loves = mean(loves_count, na.rm = TRUE)
  )
summary_category <- combined %>%
  group_by(secondary_category, category) %>%
  summarize(
    avg_rating = mean(rating, na.rm = TRUE),
    avg_reviews = mean(reviews, na.rm = TRUE),
    avg_loves = mean(loves_count, na.rm = TRUE),
    .groups = "drop"
  )


```

Now lets narrow this down to gain a deeper understanding of the metric's correlations. This will give us a deeper understanding of whether or not the high ratings are linked to customer engagement and the relationship of these metrics could be a strength or weakness in a company's product. There is a positive correlation only in the loves count vs reviews. As love count measures a customer's preference or loyalty to a product, these products with higher love counts often resonate well with customers which can indicate a stronger brand or product appeal. While higher reviews refelct customer engagement which means customers are actively interacting and sharing their experience with these products. These may be important as love counts are valuable in its way to show a loyal customer base and product desirability while reviews show direct feedback and helps a brand identify areas for improvement or marketing. This correlation has a measure of preference which shows engagement and holisticly shows a product's performance, and it shows that between reviews and love counts are more likely to be loved by customers.

```{r}
# Scatterplot: Rating vs Reviews
ggplot(combined, aes(x = reviews, y = rating)) +
  geom_point(alpha = 0.6, color = "blue") +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  labs(
    title = "Relationship Between Reviews and Rating",
    x = "Number of Reviews",
    y = "Rating"
  ) +
  theme_minimal()

# Scatterplot: Rating vs Loves Count
ggplot(combined, aes(x = loves_count, y = rating)) +
  geom_point(alpha = 0.6, color = "green") +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  labs(
    title = "Relationship Between Loves Count and Rating",
    x = "Loves Count",
    y = "Rating"
  ) +
  theme_minimal()

# Scatterplot: Loves Count vs Reviews
ggplot(combined, aes(x = reviews, y = loves_count)) +
  geom_point(alpha = 0.6, color = "purple") +
  geom_smooth(method = "lm", se = FALSE, color = "red") +
  labs(
    title = "Relationship Between Reviews and Loves Count",
    x = "Number of Reviews",
    y = "Loves Count"
  ) +
  theme_minimal()


```

Quantifying this, we can see that the correlation of reviews and loves tend to be much higher than reviews and ratings or ratings and loves.

```{r}
correlations <- combined %>%
  group_by(secondary_category) %>%
  summarize(
    corr_reviews_rating = cor(reviews, rating, use = "complete.obs"),  
    corr_rating_loves = cor(rating, loves_count, use = "complete.obs"),
    corr_reviews_loves = cor(reviews, loves_count, use = "complete.obs"), 
    .groups = "drop"
  )

correlations


```

This table reveals something interesting. The worst 3 products tend to have a higher average review and love count compared to the top 3 products which have fewer reviews and love counts. This suggests that high visibility and customer engagement (throguh reviews) dont always translate to positive sentiments or high ratings. instead these metrics could indicate polarizing products that attract significant attention but also receive miexed or negative feedback. However, the top 3 products,despite having fewer reviews and loves maintain a higher average rating which could mean they deliver consistent qualtiy and satisifcation to a samller but liekly more loyal audience. This observation could enforce the idea taht quantity of engagement throguh reviews or loves does not necessairly equate to a quality of sentiment through ratings. Understanding this dynamic could help a brand focus on improving their underperformign product with high visibility to turn into loyalty and satsifcation. But why might a low rated product have such low love counts you might ask? This could be due to either strong marketing, or a brand's reputation, a subset of users who strongly dislike and those who like, historical popularity that has declined, brand loyalty, or just simply an intent to purchase but never did.

```{r}
summary_metrics <- combined %>%
  group_by(category) %>%
  summarize(
    avg_rating = mean(rating, na.rm = TRUE),
    avg_reviews = mean(reviews, na.rm = TRUE),
    avg_loves = mean(loves_count, na.rm = TRUE),
    .groups = "drop"
  )

print(summary_metrics)

ggplot(summary_metrics, aes(x = category, y = avg_rating, fill = category)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Average Rating Across Categories (Top 3 vs Worst 3)",
    x = "Category",
    y = "Average Rating"
  ) +
  theme_minimal() 

ggplot(summary_metrics, aes(x = category, y = avg_reviews, fill = category)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Average Reviews Across Categories (Top 3 vs Worst 3)",
    x = "Category",
    y = "Average Reviews"
  ) +
  theme_minimal() 

ggplot(summary_metrics, aes(x = category, y = avg_loves, fill = category)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Average Loves Across Categories (Top 3 vs Worst 3)",
    x = "Category",
    y = "Average Loves"
  ) +
  theme_minimal() 

```

Now to better understnad our products by analyzing their performance through primary categories which provides a simplified and clearer view of data. However, to achieve this, we exclude the mini sizes, as they represent smaller versions of existing products and may skew the results without offering anything unique. We group these primary categories again into their ratings, reviews, and love counts, for the top 3 and bottom 3 products in each category. Skincare has higher reviews and love counts for the worst 3 products compared to the top 3 which could suggest high customer interest but mixed satisfcation or the fact that there were more people who bought the product but just didn't like it compared to the top 3. While tools and brushes excel in all the categories for the top 3 which might highlight a category where quality plays a critical role in custoemr rating. While the rest might just suggest niche appeals or polarizing customer preferences, these patterns emphasize that high engagement does not always translate to high satisfaction, as we've seen before. This underscores the importantance that we must dive deeper into brand performance review sentiments to truly get the crux of it and uncover reasons behind these trends and understand strategies for product improvement.

```{r}
#use primary category now for graph simplification
combined_with_primary <- combined %>%
  left_join(product_info %>% select(product_id, primary_category), by = "product_id")

#remove "mini size" irrelevant and skews info
broad_category_summary <- combined_with_primary %>%
  filter(primary_category != "Mini Size") %>% 
  mutate(
    broad_category = ifelse(is.na(primary_category) | primary_category == "", "Other", primary_category)  
  ) %>%
  group_by(broad_category, category) %>%  
  summarize(
    avg_rating = mean(rating, na.rm = TRUE),   
    avg_reviews = mean(reviews, na.rm = TRUE), 
    avg_loves = mean(loves_count, na.rm = TRUE), 
    .groups = "drop"
  )

#avg rating
ggplot(broad_category_summary, aes(x = reorder(broad_category, avg_rating), y = avg_rating, fill = category)) +
  geom_bar(stat = "identity", position = "dodge") +
  coord_flip() +
  labs(
    title = "Average Ratings by Primary Categories (Top 3 vs Worst 3)",
    x = "Primary Category",
    y = "Average Rating",
    fill = "Category"
  ) +
  theme_minimal()

#avg review
ggplot(broad_category_summary, aes(x = reorder(broad_category, avg_reviews), y = avg_reviews, fill = category)) +
  geom_bar(stat = "identity", position = "dodge") +
  coord_flip() +
  labs(
    title = "Average Reviews by Primary Categories (Top 3 vs Worst 3)",
    x = "Primary Category",
    y = "Average Reviews",
    fill = "Category"
  ) +
  theme_minimal()

#avg love count
ggplot(broad_category_summary, aes(x = reorder(broad_category, avg_loves), y = avg_loves, fill = category)) +
  geom_bar(stat = "identity", position = "dodge") +
  coord_flip() +
  labs(
    title = "Average Loves Count by Primary Categories (Top 3 vs Worst 3)",
    x = "Primary Category",
    y = "Average Loves Count",
    fill = "Category"
  ) +
  theme_minimal()

```
